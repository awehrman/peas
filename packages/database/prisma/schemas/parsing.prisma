enum ParseStatus {
  PENDING
  CORRECT
  INCORRECT
  ERROR
}

// Parsing module
// Contains parsed content from recipe notes

model ParsedIngredientLine {
  id String @id @default(cuid())

  blockIndex Int
  lineIndex  Int
  reference  String
  rule       String?

  parseStatus ParseStatus @default(PENDING)
  parsedAt              DateTime?
  parsed                ParsedSegment[]
  queueJobs QueueJob[]

  ingredientReferences IngredientReference[]

  // New field to mark lines as active/inactive
  isActive Boolean @default(true)

  Note   Note?   @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([noteId])
  @@index([isActive])
}

model ParsedInstructionLine {
  id String @id @default(cuid())

  lineIndex Int
  originalText String
  normalizedText String?

  parseStatus ParseStatus @default(PENDING)

  isActive Boolean @default(true)

  note   Note?   @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId String?
  queueJobs QueueJob[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([noteId])
  @@index([isActive])
}

model ParsedSegment {
  id String @id @default(cuid())

  index Int
  rule  String
  type  String
  value String
  processingTime Int? // Processing time in milliseconds

  ingredientLine   ParsedIngredientLine @relation(fields: [ingredientLineId], references: [id], onDelete: Cascade)
  ingredientLineId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ingredientLineId])
}

model UniqueLinePattern {
  id String @id @default(cuid())

  // Short code for the pattern (e.g., "AMOUNT_UNIT_INGREDIENT")
  patternCode String @unique

  // JSON array of rule strings in order
  ruleSequence Json

  // Example line that matches this pattern
  exampleLine String?

  // Count of times this pattern has been seen
  occurrenceCount Int @default(1)

  // First time this pattern was seen
  firstSeenAt DateTime @default(now())

  // Last time this pattern was seen
  lastSeenAt DateTime @updatedAt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([patternCode])
  @@index([occurrenceCount])
} 