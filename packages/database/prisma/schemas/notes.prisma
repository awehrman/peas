// Notes module
// Contains note processing and status tracking

enum NoteStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum ErrorCode {
  HTML_PARSE_ERROR
  INGREDIENT_PARSE_ERROR
  INSTRUCTION_PARSE_ERROR
  QUEUE_JOB_FAILED
  IMAGE_UPLOAD_FAILED
  UNKNOWN_ERROR
}

model EvernoteMetadata {
  id String @id @default(cuid())

  evernoteGUID        String?
  source              String?

  evernoteCreatedAt DateTime?
  evernoteUpdatedAt DateTime?

  note Note?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id                  String    @id @default(cuid())
  title               String?
  html                String @db.Text // For large HTML content
  imageUrl            String?
  status              NoteStatus @default(PENDING)

  evernoteMetadataId String? @unique
  evernoteMetadata   EvernoteMetadata? @relation(fields: [evernoteMetadataId], references: [id])
  
  totalIngredientLines Int @default(0)
  totalInstructionLines Int @default(0)
  parsingErrorCount     Int     @default(0)

  parsedIngredientLines ParsedIngredientLine[]
  parsedInstructionLines ParsedInstructionLine[]
  queueJobs QueueJob[]
  statusEvents NoteStatusEvent[]

  errorMessage String?
  errorCode ErrorCode?
  errorDetails Json?

  categories Category[]
  tags       Tag[]
  sources    Source[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NoteStatusEvent {
  id String @id @default(cuid())
  
  status NoteStatus
  errorMessage String?
  errorCode ErrorCode?
  errorDetails Json?
  
  // For tracking progress (e.g., "ingredients (1/5) processed")
  currentCount Int?
  totalCount Int?
  
  // Additional context about what was being processed
  context String? // e.g., "ingredient line parsing", "image upload", etc.
  
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId String
  
  createdAt DateTime @default(now())
  
  @@index([noteId])
  @@index([status])
  @@index([createdAt])
  @@index([noteId, createdAt])  // for filtering by note + time
  @@index([status, createdAt])  // for filtering by status + time
} 